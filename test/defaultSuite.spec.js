// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

const path = require('path');

const chrome = require('selenium-webdriver/chrome');
const fs = require('fs');
function encode(file) {
  var stream = fs.readFileSync(file);
  return new Buffer.from(stream).toString('base64');
}
const chromeOptions = new chrome.Options()
// .addExtensions(encode(path.resolve(__dirname, '../cextension.crx')))
.headless()

const firefox = require('selenium-webdriver/firefox');
const firefoxOptions = new firefox.Options()
.addExtensions(path.resolve(__dirname, '../ffextension.xpi'))
.headless()

describe('Default Suite', function() {
  this.timeout(60000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder()
    // .forBrowser('chrome')
    // .setChromeOptions(chromeOptions)
    .forBrowser('firefox')
    .setFirefoxOptions(firefoxOptions)
    .build()
    const windows = await driver.getAllWindowHandles();
    await driver.switchTo().window(windows[0]);
    vars = {
      r_username: process.env.RAKUTEN_USERNAME || "",
      r_password: process.env.RAKUTEN_PASSWORD || ""
    }
  })
  afterEach(async function() {
    await driver.quit();
  })
  async function credentials() {
    await driver.manage().window().setRect(875, 875)
    await driver.get("https://kuji.rakuten.co.jp/256356cd1a")
    vars["needLogin"] = (await driver.findElements(By.xpath("//input[@class=\'loginButton\']"))).length
    if (!!await driver.executeScript("return (arguments[0] == 1)", vars["needLogin"])) {
      await driver.findElement(By.name("u")).sendKeys(vars["r_username"])
      await driver.findElement(By.name("p")).sendKeys(vars["r_password"])
      await driver.findElement(By.name("submit")).click()
      await driver.sleep(2000)
    }
  }
  it('get point', async function() {
    await credentials()
    await driver.manage().window().setRect(875, 875)
    await driver.get("https://websearch.rakuten.co.jp/Web?qt=test&col=OW")
    vars["needLogin"] = (await driver.findElements(By.xpath("//a[contains(text(),\'ログイン\')]"))).length
    if (!!await driver.executeScript("return (arguments[0] == 1)", vars["needLogin"])) {
      (await driver.findElement(By.linkText("ログイン"))).click()
      await driver.sleep(3000)
    }
    vars["searchKeyWord"] = await driver.executeScript("return \"魚\"")
    vars["searchCountMax"] = await driver.executeScript("return 30")
    await driver.get("https://websearch.rakuten.co.jp/")
    await driver.findElement(By.id("search-input")).click()
    await driver.sleep(1000)
    vars["myRandomNumber"] = await driver.executeScript("return arguments[0] + Math.floor(Math.random()*1000) + \"\"", vars["searchKeyWord"])
    await driver.findElement(By.id("search-input")).sendKeys(vars["myRandomNumber"])
    await driver.findElement(By.id("search-submit")).click()
    await driver.sleep(1000)
    vars["currentSearchCount"] = await driver.executeScript("return 1")
    while(!!await driver.executeScript("return (arguments[0] < arguments[1])", vars["currentSearchCount"],vars["searchCountMax"])) {
      vars["myRandomNumber"] = await driver.executeScript("return arguments[0] + Math.floor(Math.random()*1000) + \"\"", vars["searchKeyWord"])
      await driver.findElement(By.id("srchformtxt_qt")).sendKeys(vars["myRandomNumber"])
      await driver.findElement(By.id("searchBtn")).click()
      await driver.sleep(1000)
      vars["currentSearchCount"] = await driver.findElement(By.css(".sc-fzqNJr")).getText()
    }
    await driver.close()
  })
  it('kuji-default', async function() {
    await credentials()
    await driver.manage().window().setRect(875, 875)
    vars["kujiListDefault"] = await driver.executeScript("return [\"https://kuji.rakuten.co.jp/256356cd1a/\",\"https://kuji.rakuten.co.jp/8212abcffe/\",\"https://kuji.rakuten.co.jp/fae37d0d91/\",\"https://kuji.rakuten.co.jp/d2b37c7d6a/\"]")
    const collection = vars["kujiListDefault"]
    for (let i = 0; i < collection.length - 1; i++) {
      vars["kujiLink"] = vars["kujiListDefault"][i]
      await driver.sleep(1000)
      await driver.get(vars["kujiLink"])
      vars["hasEntry"] = (await driver.findElements(By.xpath("//*[@id=\"entry\"]"))).length
      if (!!await driver.executeScript("return (arguments[0] == 1)", vars["hasEntry"])) {
        await driver.findElement(By.id("entry")).click()
        await driver.wait(until.stalenessOf(await driver.findElement(By.id("entry"))), 60000)
      }
    }
    await driver.close()
  })
  it('rakuten-card', async function() {
    await credentials()
    await driver.manage().window().setRect(875, 875)
    await driver.get("https://www.rakuten-card.co.jp/e-navi/index.xhtml")
    vars["needLogin"] = (await driver.findElements(By.xpath("//input[@class=\'loginButton\']"))).length
    if (!!await driver.executeScript("return (arguments[0] == 1)", vars["needLogin"])) {
      await driver.findElement(By.name("u")).sendKeys(vars["r_username"])
      await driver.findElement(By.name("p")).sendKeys(vars["r_password"])
      await driver.findElement(By.id("loginButton")).click()
      await driver.sleep(3000)
    }
    vars["clickPointCount"] = await driver.findElement(By.css(".sprite-ico_rc_enavi_point_01 > .rce-number")).getText()
    await driver.findElement(By.css(".sprite-ico_rc_enavi_point_01")).click()
    if (!!await driver.executeScript("return (arguments[0] > 0)", vars["clickPointCount"])) {
      vars["index"] = await driver.executeScript("return arguments[0]", vars["clickPointCount"])
      while(!!await driver.executeScript("return (arguments[0] > 0)", vars["index"])) {
        vars["canClickGetPoint"] = (await driver.findElements(By.xpath("//*[@id=\'topArea\']/div["+vars["index"]+"]/div[1]/p/img"))).length
        if (!!await driver.executeScript("return (arguments[0] == 1)", vars["canClickGetPoint"])) {
          await driver.findElement(By.xpath("//*[@id=\'topArea\']/div["+vars["index"]+"]/div[1]/p/img/../../../div[2]/div[1]/a[1]")).click()
          vars["root"] = await driver.getWindowHandle()
          await driver.switchTo().window(vars["root"])
        }
        vars["index"] = await driver.executeScript("return arguments[0] - 1", vars["index"])
      }
    }
    await driver.findElement(By.css(".pNav03 > a")).click()
    await driver.sleep(2000)
    let clickReceivePointDaily = await driver.findElement(By.id("js-coreppo-receive"))
    if (await clickReceivePointDaily.isDisplayed()) {
      await driver.findElement(By.id("js-coreppo-receive")).click()
      await driver.sleep(5000)
    }
    await driver.close()
  })
  it('kuji', async function() {
    await credentials()
    await driver.manage().window().setRect(875, 875)
    vars["kujiCountCurrent"] = await driver.executeScript("return 3")
    await driver.get("https://kuji.rakuten.co.jp/")
    vars["kujiCountMax"] = await driver.executeScript("return document.querySelectorAll(\".kuji_list li\").length")
    while(!!await driver.executeScript("return (arguments[0] <= arguments[1])", vars["kujiCountCurrent"],vars["kujiCountMax"])) {
      await driver.get("https://kuji.rakuten.co.jp/")
      await driver.findElement(By.xpath("//section[@class=\'kuji_list\']/ul/li["+vars["kujiCountCurrent"]+"]/a/img")).click()
      await driver.sleep(1000)
      vars["hasDisnon"] = (await driver.findElements(By.xpath("//*[@class=\"btn-10000\"]"))).length
      if (!!await driver.executeScript("return (arguments[0] == 1)", vars["hasDisnon"])) {
        await driver.findElement(By.css(".btn-10000")).click()
        await driver.sleep(2000)
      }
      vars["hasEntry"] = (await driver.findElements(By.xpath("//*[@id=\"entry\"]"))).length
      if (!!await driver.executeScript("return (arguments[0] == 1)", vars["hasEntry"])) {
        await driver.findElement(By.id("entry")).click()
        await driver.sleep(2000)
        await driver.wait(until.stalenessOf(await driver.findElement(By.id("entry"))), 60000)
      }
      vars["kujiCountCurrent"] = await driver.executeScript("return arguments[0]+1", vars["kujiCountCurrent"])
    }
    await driver.close()
  })
})
